name: QA Deployments

on:
  push:
    branches-ignore:
      - main
  delete:
    branches:
      - '**'

jobs:
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS CLI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Get ECR login password
        id: ecr-login
        run: echo "ECR_PASSWORD=$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }})" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        env:
          ECR_PASSWORD: ${{ env.ECR_PASSWORD }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          DOMAIN=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          echo "$ECR_PASSWORD" | docker login --username AWS --password-stdin $DOMAIN

      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hub-api
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | sed 's/\//-/g')
          docker build -t $REPOSITORY_URI:$TAG .
          docker push $REPOSITORY_URI:$TAG

      - name: List Existing Elastic Beanstalk Environments
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          pip install awsebcli
          eb list

      - name: Check if Environment Exists
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | sed 's/\//-/g' | sed 's/[^a-zA-Z0-9-]//g' | sed 's/^-//;s/-$//' | tr '[:upper:]' '[:lower:]')
          SUBDOMAIN=$(echo $TAG | sed 's/^-//;s/-$//')
          echo "Checking if environment $SUBDOMAIN-env exists"
          if eb status $SUBDOMAIN-env; then
            echo "Environment $SUBDOMAIN-env exists. Terminating..."
            eb terminate $SUBDOMAIN-env --force
          else
            echo "Environment $SUBDOMAIN-env does not exist."
          fi

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          HOST: ${{ secrets.HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          PORT: ${{ secrets.PORT }}
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | sed 's/\//-/g' | sed 's/[^a-zA-Z0-9-]//g' | sed 's/^-//;s/-$//' | tr '[:upper:]' '[:lower:]')
          SUBDOMAIN=$(echo $TAG | sed 's/^-//;s/-$//')
          echo "Deploying to subdomain: $SUBDOMAIN.verbohub.com.br with tag: $TAG"
          pip install awsebcli
          eb init -p docker hub-api --region $AWS_REGION
          eb create $SUBDOMAIN-env --cname $SUBDOMAIN
          eb use $SUBDOMAIN-env
          eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY DB_USER=$DB_USER DB_HOST=$DB_HOST DB_NAME=$DB_NAME DB_PASSWORD=$DB_PASSWORD DB_PORT=$DB_PORT PORT=$PORT HOST=$HOST
          eb deploy

  cleanup:
    if: github.event_name == 'delete'
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS CLI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Delete Elastic Beanstalk Environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | sed 's/\//-/g' | sed 's/[^a-zA-Z0-9-]//g' | sed 's/^-//;s/-$//')
          echo "Terminating environment: $TAG-env"
          eb terminate $TAG-env --force
