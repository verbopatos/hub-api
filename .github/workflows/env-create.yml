name: Deploy test environment to Elastic Beanstalk

on:
  push:
    branches-ignore:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS CLI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Verify AWS CLI Configuration
        run: |
          aws sts get-caller-identity
          aws ecr describe-repositories --region ${{ secrets.AWS_REGION }}

      - name: Get ECR login password
        id: ecr-login
        run: echo "ECR_PASSWORD=$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }})" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        env:
          ECR_PASSWORD: ${{ env.ECR_PASSWORD }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          DOMAIN=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          echo "$ECR_PASSWORD" | docker login --username AWS --password-stdin $DOMAIN

      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hub-api
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-} # Replace slashes with hyphens
          IMAGE_TAG=${BRANCH_NAME}-latest
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          HOST: ${{ secrets.HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          PORT: ${{ secrets.PORT }}
        run: |
          pip install awsebcli
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-} # Replace slashes with hyphens
          EB_ENV_NAME=hub-api-${BRANCH_NAME}
          EB_APP_NAME=hub-api

          # Check if the environment exists and terminate if it does
          if eb list | grep -q $EB_ENV_NAME; then
            echo "Environment $EB_ENV_NAME exists. Terminating..."
            eb terminate $EB_ENV_NAME --force
            # Wait for termination to complete
            while eb list | grep -q $EB_ENV_NAME; do
              echo "Waiting for environment $EB_ENV_NAME to terminate..."
              sleep 30
            done
          fi

          eb init -p docker $EB_APP_NAME --region $AWS_REGION
          eb create $EB_ENV_NAME --cname $BRANCH_NAME --envvars AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=$AWS_SE
