# deploy.yml
name: Deploy to Elastic Beanstalk

on:
  workflow_run:
    workflows: ["Run Unit Tests"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Run only if the previous workflow succeeded

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load .env variables
        run: |
          cat <<EOF >> $GITHUB_ENV
          $(cat .env)
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hub-api
          docker build -t $REPOSITORY_URI:latest .
          docker push $REPOSITORY_URI:latest

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          HOST: ${{ env.HOST }}
          DB_USER: ${{ env.DB_USER }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_PORT: ${{ env.DB_PORT }}
          PORT: ${{ env.PORT }}
        run: |
          pip install awsebcli
          eb init -p docker hub-api --region $AWS_REGION
          eb use hub-api-env
          eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY DB_USER=$DB_USER DB_HOST=$DB_HOST DB_NAME=$DB_NAME DB_PASSWORD=$DB_PASSWORD DB_PORT=$DB_PORT PORT=$PORT HOST=$HOST
          eb deploy
