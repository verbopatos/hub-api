# env-delete.yml
name: Delete test environment from Elastic Beanstalk

on:
  delete:

jobs:
  delete-non-prod-env:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS CLI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Delete environment from Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ROUTE_53_HOSTED_ZONE_ID: ${{ secrets.ROUTE53_HOSTED_ZONE_ID }}
        run: |
          set -e

          pip install awsebcli

          # Get the branch name from the deletion ref
          REF=${GITHUB_REF}
          BRANCH_NAME=${REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-} # Replace slashes with hyphens
          EB_ENV_NAME=hub-api-${BRANCH_NAME}
          EB_APP_NAME=hub-api

          echo "Branch ref: $REF"
          echo "Branch name: $BRANCH_NAME"
          echo "Environment name: $EB_ENV_NAME"

          # Check if the environment exists using AWS CLI
          ENV_EXISTS=$(aws elasticbeanstalk describe-environments --region $AWS_REGION --application-name $EB_APP_NAME --environment-names $EB_ENV_NAME --query "Environments[?Status != 'Terminated'].EnvironmentName" --output text)

          if [ "$ENV_EXISTS" == "$EB_ENV_NAME" ]; then
            echo "Environment $EB_ENV_NAME exists. Deleting..."
            eb terminate $EB_ENV_NAME --force

            # Wait for termination to complete
            while aws elasticbeanstalk describe-environments --region $AWS_REGION --application-name $EB_APP_NAME --environment-names $EB_ENV_NAME --query "Environments[?Status != 'Terminated'].EnvironmentName" --output text | grep -q $EB_ENV_NAME; do
              echo "Waiting for environment $EB_ENV_NAME to terminate..."
              sleep 30
            done

            echo "Environment $EB_ENV_NAME terminated successfully."

            # Delete Route 53 record
            BRANCH_DOMAIN=${BRANCH_NAME}.verbohub.com.br
            cat > change-batch.json <<EOF
            {
              "Comment": "Delete CNAME for terminated environment",
              "Changes": [
                {
                  "Action": "DELETE",
                  "ResourceRecordSet": {
                    "Name": "${BRANCH_DOMAIN}",
                    "Type": "CNAME",
                    "TTL": 300,
                    "ResourceRecords": [
                      {
                        "Value": "${EB_ENV_NAME}.elasticbeanstalk.com"
                      }
                    ]
                  }
                }
              ]
            }
            EOF

            aws route53 change-resource-record-sets --hosted-zone-id $ROUTE_53_HOSTED_ZONE_ID --change-batch file://change-batch.json
            echo "Deleted CNAME record for $BRANCH_DOMAIN."
          else
            echo "Environment $EB_ENV_NAME does not exist. No action needed."
          fi
